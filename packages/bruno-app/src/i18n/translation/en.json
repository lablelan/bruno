{
  "COMMON": {
    "COLLECTIONS": "Collections",
    "DOCUMENTATION": "Documentation",
    "REPORT_ISSUES": "Report Issues",
    "GITHUB": "GitHub",
    "DISCORD": "Discord",
    "TWITTER": "Twitter"
  },
  "WELCOME": {
    "ABOUT_BRUNO": "Opensource IDE for exploring and testing APIs",
    "LINKS": "Links",
    "CREATE_COLLECTION": "Create Collection",
    "OPEN_COLLECTION": "Open Collection",
    "IMPORT_COLLECTION": "Import Collection",
    "COLLECTION_IMPORT_SUCCESS": "Collection imported successfully",
    "COLLECTION_IMPORT_ERROR": "An error occurred while importing the collection. Check the logs for more information.",
    "COLLECTION_OPEN_ERROR": "An error occurred while opening the collection"
  },
  "ResponsePane_Placeholder": {
    "Send_Request": "Send Request",
    "New_Request": "New Request",
    "Edit_Environments": "Edit Environments"
  },
  "VariablesEditor": {
    "No_environment_selected": "No environment selected",
    "No_environment_variables_found": "No environment variables found",
    "No_runtime_variables_found": "No runtime variables found",
    "Environment_Variables": "Environment Variables",
    "Runtime_Variables": "Runtime Variables",
    "Note": "Note: As of today, runtime variables can only be set via the API",
    "And": "and",
    "HIDE_SECRET_VALUES": "Hide secret variable values",
    "SHOW_SECRET_VALUES": "Show secret variable values"
  },
  "FormUrlEncodedParams": {
    "Add_Param": "+ Add Param"
  },
  "MultipartFormParams": {
    "Add_Param": "+ Add Param",
    "Add_File": "+ Add File"
  },
  "CollectionSettings_Auth_ApiKeyAuth": {
    "Key": "Key",
    "Value": "Value",
    "Add_To": "Add To",
    "Header": "Header",
    "Query_Params": "Query Params"
  },
  "CollectionSettings_Auth_AwsV4Auth": {
    "Access_Key_ID": "Access Key ID",
    "Secret_Access_Key": "Secret Access Key",
    "Session_Token": "Session Token",
    "Service": "Service",
    "Region": "Region",
    "Profile_Name": "Profile Name"
  },
  "CollectionSettings_Auth_BasicAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "CollectionSettings_Auth_BearerAuth": {
    "Token": "Token"
  },
  "CollectionSettings_Auth_DigestAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "CollectionSettings_Auth": {
    "Inherit": "Inherit",
    "Auth": "Auth",
    "Save": "Save",
    "OptionInThe": "option in the",
    "Tab": "tab",
    "ConfiguresDescription": "Configures authentication for the entire collection. This applies to all requests using the"
  },
  "CollectionSettings_Auth_NTLMAuth": {
    "Username": "Username",
    "Password": "Password",
    "Domain": "Domain"
  },
  "CollectionSettings_Auth_OAuth2": {
    "TBD": "TBD"
  },
  "CollectionSettings_Auth_WsseAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "CollectionSettings_ClientCertSettings": {
    "LongDescriptions": "Add client certificates to be used for specific domains.",
    "Domain": "Domain",
    "Type": "Type",
    "Cert_file": "Cert file",
    "Key_file": "Key file",
    "PFX_file": "PFX file",
    "Passphrase": "Passphrase",
    "Add": "Add",
    "Client_Certificates": "Client Certificates",
    "Add_Client_Certificate": "Add Client Certificate",
    "No_client_certificates_added": "No client certificates added"
  },
  "CollectionSettings_Docs": {
    "Save": "Save",
    "Documentation": "Documentation",
    "LongDescriptions": "Welcome to your collection documentation! This space is designed to help you document your API collection effectively.\n\n## Overview\nUse this section to provide a high-level overview of your collection. You can describe:\n- The purpose of these API endpoints\n- Key features and functionalities\n- Target audience or users\n\n## Best Practices\n- Keep documentation up to date\n- Include request/response examples\n- Document error scenarios\n- Add relevant links and references\n\n## Markdown Support\nThis documentation supports Markdown formatting! You can use:\n- Bold and italic text\n- code blocks and syntax highlighting\n- Tables and lists\n- Links\n- And more!"
  },
  "CollectionSettings_Headers": {
    "Add_Header_Description": "Add request headers that will be sent with every request in this collection.",
    "Add_Header": "+ Add Header",
    "Save": "Save"
  },
  "CollectionSettings": {
    "Overview": "Overview",
    "Headers": "Headers",
    "Vars": "Vars",
    "Auth": "Auth",
    "Script": "Script",
    "Tests": "Tests",
    "Proxy": "Proxy",
    "Client_Certificates": "Client Certificates",
    "Presets": "Presets"
  },
  "CollectionSettings_Overview_Info": {
    "request": "request",
    "configured": "configured",
    "Location": "Location",
    "environment": "environment",
    "Environments": "Environments",
    "Requests": "Requests",
    "Share": "Share",
    "Share_Collection": "Share Collection",
    "in_collection": "in collection",
    "out_of": "out of",
    "requests_in_the_collection_loaded": "requests in the collection loaded"
  },
  "CollectionSettings_Overview_RequestsNotLoaded": {
    "Following_requests_were_not_loaded": "Following requests were not loaded"
  },
  "CollectionSettings_Presets": {
    "LongDescriptions": "These presets will be used as the default values for new requests in this collection.",
    "Request_Type": "Request Type",
    "HTTP": "HTTP",
    "GraphQL": "GraphQL",
    "Base_URL": "Base URL",
    "Save": "Save"
  },
  "CollectionSettings_ProxySettings": {
    "LongDescriptions": "Configure proxy settings for this collection.",
    "Config": "Config",
    "global": "global",
    "enabled": "enabled",
    "disabled": "disabled",
    "Protocol": "Protocol",
    "Hostname": "Hostname",
    "Port": "Port",
    "Auth": "Auth",
    "Username": "Username",
    "Password": "Password",
    "Proxy_Bypass": "Proxy Bypass",
    "Save": "Save"
  },
  "CollectionSettings_Script": {
    "LongDescriptions": "Write pre and post-request scripts that will run before and after any request in this collection is sent.",
    "Pre_Request": "Pre Request",
    "Post_Response": "Post Response",
    "Save": "Save"
  },
  "CollectionSettings_Tests": {
    "LongDescriptions": "These tests will run any time a request in this collection is sent.",
    "Save": "Save"
  },
  "CollectionSettings_Vars": {
    "Pre_Request": "Pre Request",
    "Post_Response": "Post Response",
    "Save": "Save"
  },
  "CollectionSettings_Vars_VarsTable": {
    "Name": "Name",
    "Value": "Value",
    "Expr": "Expr"
  },
  "RequestPane_Auth_ApiKeyAuth": {
    "Key": "Key",
    "Value": "Value",
    "Add_To": "Add To",
    "Header": "Header",
    "Query_Param": "Query Param"
  },
  "RequestPane_Auth_AwsV4Auth": {
    "Access_Key_ID": "Access Key ID",
    "Secret_Access_Key": "Secret Access Key",
    "Session_Token": "Session Token",
    "Service": "Service",
    "Region": "Region",
    "Profile_Name": "Profile Name"
  },
  "RequestPane_Auth_BasicAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "RequestPane_Auth_BearerAuth": {
    "Token": "Token"
  },
  "RequestPane_Auth_DigestAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "RequestPane_Auth_NTLMAuth": {
    "Username": "Username",
    "Password": "Password",
    "Domain": "Domain"
  },
  "RequestPane_Auth_OAuth2_AuthorizationCode": {
    "Configuration": "Configuration",
    "Token": "Token",
    "Advanced_Settings": "Advanced Settings",
    "Settings": "Settings",
    "Add_Credentials_to": "Add Credentials to",
    "Use_PKCE": "Use PKCE",
    "Token_ID": "Token ID",
    "Add_token_to": "Add token to",
    "Header_Prefix": "Header Prefix",
    "Query_Param_Key": "Query Param Key",
    "Refresh_Token_URL": "Refresh Token URL",
    "Automatically_fetch_token_if_not_found": "Automatically fetch token if not found",
    "Request_Body": "Request Body",
    "Basic_Auth_Header": "Basic Auth Header",
    "LongDescriptions2": "Automatically fetch a new token when you try to access a resource and don't have one.",
    "LongDescriptions1": "Automatically refresh your token using the refresh URL when it expires."
  },
  "RequestPane_Auth_OAuth2_ClientCredentials": {
    "Configuration": "Configuration",
    "Token": "Token",
    "Advanced_Settings": "Advanced Settings",
    "Settings": "Settings",
    "Add_Credentials_to": "Add Credentials to",
    "Token_ID": "Token ID",
    "Add_token_to": "Add token to",
    "Header_Prefix": "Header Prefix",
    "Query_Param_Key": "Query Param Key",
    "Refresh_Token_URL": "Refresh Token URL",
    "Automatically_fetch_token_if_not_found": "Automatically fetch token if not found",
    "Request_Body": "Request Body",
    "Basic_Auth_Header": "Basic Auth Header",
    "Header": "Header",
    "URL": "URL",
    "LongDescriptions2": "Automatically fetch a new token when you try to access a resource and don't have one.",
    "LongDescriptions1": "Automatically refresh your token using the refresh URL when it expires."
  },
  "RequestPane_Auth_OAuth2_GrantTypeSelector": {
    "Grant_Type": "Grant Type",
    "Password_Credentials": "Password Credentials",
    "Authorization_Code": "Authorization Code",
    "Client_Credentials": "Client Credentials"
  },
  "RequestPane_Auth_OAuth2": {
    "TBD": "TBD"
  },
  "RequestPane_Auth_OAuth2_Oauth2ActionButtons": {
    "Get_Access_Token": "Get Access Token",
    "Refresh_Token": "Refresh Token",
    "Clear_Cache": "Clear Cache"
  },
  "RequestPane_Auth_OAuth2_Oauth2TokenViewer": {
    "Token_Type": "Token Type",
    "Scope": "Scope",
    "Decoded_Payload": "Decoded Payload",
    "No_token_found": "No token found",
    "LongDescriptions": "Error fetching token. Check network logs for more details."
  },
  "RequestPane_Auth_OAuth2_PasswordCredentials": {
    "Configuration": "Configuration",
    "Token": "Token",
    "Advanced_Settings": "Advanced Settings",
    "Settings": "Settings",
    "Add_Credentials_to": "Add Credentials to",
    "Token_ID": "Token ID",
    "Add_token_to": "Add token to",
    "Header_Prefix": "Header Prefix",
    "Query_Param_Key": "Query Param Key",
    "Refresh_Token_URL": "Refresh Token URL",
    "Automatically_fetch_token_if_not_found": "Automatically fetch token if not found",
    "Request_Body": "Request_Body",
    "Basic_Auth_Header": "Basic Auth Header",
    "Header": "Header",
    "LongDescriptions2": "Automatically fetch a new token when you try to access a resource and don't have one.",
    "LongDescriptions1": "Automatically refresh your token using the refresh URL when it expires."
  },
  "RequestPane_Auth_WsseAuth": {
    "Username": "Username",
    "Password": "Password"
  },
  "RequestPane_FileBody": {
    "File": "File",
    "Selected": "Selected",
    "Add_File": "+ Add File"
  },
  "RequestPane_GraphQLRequestPane": {
    "Something_went_wrong": "Something went wrong",
    "Variables": "Variables",
    "Headers": "Headers",
    "Auth": "Auth",
    "Vars": "Vars",
    "Script": "Script",
    "Assert": "Assert",
    "Tests": "Tests",
    "Docs": "Docs"
  },
  "RequestPane_GraphQLSchemaActions": {
    "Schema": "Schema",
    "Docs": "Docs",
    "Load_from_File": "Load from File"
  },
  "RequestPane_HttpRequestPane": {
    "Params": "Params",
    "Body": "Body",
    "Headers": "Headers",
    "Auth": "Auth",
    "Vars": "Vars",
    "Script": "Script",
    "Assert": "Assert",
    "Tests": "Tests",
    "Docs": "Docs",
    "Something_went_wrong": "Something went wrong"
  },
  "RequestPane_QueryEditor": {
    "Deprecated": "Deprecated"
  },
  "RequestPane_QueryParams": {
    "Add_Param": "Add Param",
    "Path": "Path",
    "Bulk_Edit": "Bulk Edit"
  },
  "RequestPane_QueryUrl": {
    "Generate_Code": "Generate Code",
    "Save": "Save"
  },
  "RequestPane_RequestBody_RequestBodyMode": {
    "Form": "Form",
    "Raw": "Raw",
    "Other": "Other",
    "Prettify": "Prettify",
    "Multipart_Form": "Multipart Form",
    "Form_URL_Encoded": "Form URL Encoded"
  },
  "RequestPane_RequestHeaders": {
    "Add_Header": "+ Add Header",
    "Bulk_Edit": "Bulk Edit"
  },
  "RequestPane_Vars_VarsTable": {
    "Value": "Value",
    "Expr": "Expr",
    "Add": "+ Add"
  },
  "RequestPane_Assertions": {
    "Add_Assertion": "+ Add Assertion",
    "Expr": "Expr",
    "Operator": "Operator",
    "Value": "Value"
  },
  "Sidebar_Collections_Collection_CloneCollection": {
    "Name": "Name",
    "Location": "Location",
    "Folder_Name": "Folder Name",
    "Browse": "Browse",
    "LongDescriptions2": "The name of the folder used to store the collection.",
    "LongDescriptions1": "You can choose a folder name different from your collection's name or one compatible with filesystem rules."
  },
  "Sidebar_Collections_Collection_CollectionItem_CloneCollectionItem": {
    "Options": "Options",
    "Cancel": "Cancel",
    "Clone": "Clone",
    "FolderName": "Folder Name",
    "RequestName": "Request Name"
  },
  "Sidebar_Collections_Collection_CollectionItem_GenerateCodeItem_CodeViewToolbar": {
    "Interpolate_Variables": "Interpolate Variables"
  },
  "Sidebar_Collections_Collection_CollectionItem_GenerateCodeItem": {
    "Invalid_URL": "Invalid URL",
    "Please_check_the_URL_and_try_again": "Please check the URL and try again"
  },
  "Sidebar_Collections_Collection_CollectionItem_RenameCollectionItem": {
    "Options": "Options",
    "Cancel": "Cancel",
    "Rename": "Rename",
    "FolderName": "FolderName",
    "FileName": "FileName",
    "RequestName": "RequestName",
    "LongDescriptions3": "You can choose to save the folder as a different name on your file system versus what is displayed in the app.",
    "LongDescriptions2": "Bruno saves each request as a file in your collection's folder.",
    "LongDescriptions1": "You can choose a file name different from your request's name or one compatible with filesystem rules."
  },
  "Sidebar_Collections_Collection_CollectionItem_RunCollectionItem": {
    "Run": "Run",
    "Recursive_Run": "Recursive Run",
    "Cancel": "Cancel",
    "LongDescriptions1": "No request found in this folder.",
    "LongDescriptions2": "This will only run the requests in this folder.",
    "LongDescriptions3": "This will run all the requests in this folder and all its subfolders.",
    "LongDescriptions4": "Requests in this folder are still loading.",
    "LongDescriptions5": "A Collection Run is already in progress.",
    "View_Run": "View Run"
  },
  "Sidebar_Collections_Collection_ExportCollection": {
    "Postman_Collection": "Postman Collection",
    "Bruno_Collection": "Bruno Collection"
  },
  "Sidebar_Collections_Collection_RenameCollection": {
    "Name": "Name"
  },
  "Sidebar_Collections": {
    "Collections": "Collections"
  },
  "Sidebar_Collections_SelectCollection": {
    "No_collections_found": "No collections found"
  },
  "Sidebar_CreateCollection": {
    "Name": "Name",
    "Location": "Location",
    "Browse": "Browse",
    "Folder_Name": "Folder Name",
    "LongDescriptions1": "Bruno stores your collections on your computer's filesystem.",
    "LongDescriptions2": "Choose the location where you want to store this collection.",
    "LongDescriptions3": "The name of the folder used to store the collection.",
    "LongDescriptions4": "You can choose a folder name different from your collection's name or one compatible with filesystem rules."
  },
  "Sidebar_GoldenEdition": {
    "Buy": "Buy",
    "Everything_in_the_Individual_Plan": "Everything in the Individual Plan",
    "Golden_Edition": "Golden Edition",
    "One_Time_Payment": "One Time Payment",
    "Individuals": "Individuals",
    "Organizations": "Organizations",
    "perpetual_license_with_2_years_of_updates": "perpetual license with 2 years of updates",
    "LongDescriptions1": "perpetual license for 2 devices, with 2 years of updates",
    "LongDescriptions2": "Support Bruno's Development"
  },
  "Sidebar_ImportCollection": {
    "Bruno_Collection": "Bruno Collection",
    "Postman_Collection": "Postman Collection",
    "Insomnia_Collection": "Insomnia Collection",
    "OpenAPI_V3_Spec": "OpenAPI V3 Spec",
    "LongDescriptions1": "Select the type of your existing collection :",
    "This_may_take_a_moment_depending_on_the_collection_size": "This may take a moment depending on the collection size"
  },
  "Sidebar_ImportCollectionLocation": {
    "Browse": "Browse",
    "Name": "Name",
    "Location": "Location",
    "LongDescriptions1": "Bruno stores your collections on your computer's filesystem.",
    "LongDescriptions2": "Choose the location where you want to store this collection."
  },
  "Sidebar_NewFolder": {
    "Folder_Name": "Folder Name",
    "Options": "Options",
    "Cancel": "Cancel",
    "Create": "Create",
    "LongDescriptions1": "You can choose to save the folder as a different name on your file system versus what is displayed in the app."
  },
  "Sidebar_NewRequest": {
    "Type": "Type",
    "HTTP": "HTTP",
    "GraphQL": "GraphQL",
    "From_cURL": "From cURL",
    "Request_Name": "Request Name",
    "URL": "URL",
    "cURL_Command": "cURL Command",
    "Options": "Options",
    "Cancel": "Cancel",
    "Create": "Create",
    "File_Name": "File Name",
    "LongDescriptions1": "Bruno saves each request as a file in your collection's folder.",
    "LongDescriptions2": "You can choose a file name different from your request's name or one compatible with filesystem rules."
  },
  "Sidebar_TitleBar": {
    "Create_Collection": "Create Collection",
    "Open_Collection": "Open Collection",
    "Import_Collection": "Import Collection",
    "Devtools": "Devtools"
  },
  "Environments_EnvironmentSelector": {
    "Collection_Environments": "Collection Environments",
    "No_Environment": "No Environment",
    "Configure": "Configure"
  },
  "Environments_EnvironmentSettings_CopyEnvironment": {
    "New_Environment_Name": "New Environment Name"
  },
  "Environments_EnvironmentSettings_CreateEnvironment": {
    "Environment_Name": "Environment Name"
  },
  "Environments_EnvironmentSettings_EnvironmentList": {
    "Close": "Close",
    "Create": "Create",
    "Import": "Import",
    "Managing_Secrets": "Managing Secrets",
    "LongDescriptions1": "You have unsaved changes in this environment."
  },
  "Environments_EnvironmentSettings_ImportEnvironment": {
    "Import_your_Postman_environments": "Import your Postman environments"
  },
  "Environments_EnvironmentSettings": {
    "No_environments_found": "No environments found",
    "Create_Environment": "Create Environment",
    "Or": "Or",
    "Import_Environment": "Import Environment",
    "LongDescriptions1": "Get started by using the following buttons :"
  },
  "Environments_EnvironmentSettings_RenameEnvironment": {
    "Environment_Name": "Environment Name"
  },
  "GlobalEnvironments_EnvironmentSelector": {
    "Global_Environments": "Global Environments",
    "No_Environment": "No Environment",
    "Configure": "Configure"
  },
  "GlobalEnvironments_EnvironmentSettings_CopyEnvironment": {
    "New_Environment_Name": "New Environment Name"
  },
  "GlobalEnvironments_EnvironmentSettings_CreateEnvironment": {
    "Environment_Name": "Environment Name"
  },
  "GlobalEnvironments_EnvironmentSettings_EnvironmentList": {
    "Close": "Close",
    "Create": "Create",
    "Import": "Import",
    "Managing_Secrets": "Managing Secrets",
    "LongDescriptions1": "You have unsaved changes in this environment.",
    "LongDescriptions2": "Hold on.."
  },
  "GlobalEnvironments_EnvironmentSettings_EnvironmentList_EnvironmentDetails_EnvironmentVariables": {
    "Save": "Save",
    "Reset": "Reset",
    "Add_Variable": "+ Add Variable"
  },
  "GlobalEnvironments_EnvironmentSettings_ImportEnvironment": {
    "Import_your_Postman_environments": "Import your Postman environments"
  },
  "GlobalEnvironments_EnvironmentSettings": {
    "Global_Environments": "Global Environments",
    "No_Global_Environments_found": "No Global Environments found",
    "Create_Global_Environment": "Create Global Environment",
    "Or": "Or",
    "Import_Environment": "Import Environment"
  },
  "GlobalEnvironments_EnvironmentSettings_RenameEnvironment": {
    "Environment_Name": "Environment Name"
  },
  "BrunoSupport": {
    "Documentation": "Documentation",
    "Report_Issues": "Report Issues",
    "Discord": "Discord",
    "GitHub": "GitHub",
    "Twitter": "Twitter"
  },
  "Cookies": {
    "Add_Cookie": "Add Cookie",
    "Close": "Close",
    "Clear_All": "Clear All",
    "Delete": "Delete",
    "Cookies": "Cookies",
    "No_cookies_found": "No cookies found",
    "No_search_results": "No search results",
    "Add_cookies_to_get_started": "Add cookies to get started",
    "Try_a_different_search_term": "Try a different search term",
    "LongDescriptions1": "Are you sure you want to clear all cookies for the domain",
    "LongDescriptions2": "Are you sure you want to delete the cookie",
    "Name": "Name",
    "Value": "Value",
    "Path": "Path",
    "Expires": "Expires",
    "Secure": "Secure",
    "HTTP_Only": "HTTP Only",
    "Actions": "Actions"
  },
  "Cookies_ModifyCookieModal": {
    "Secure": "Secure",
    "HTTP_Only": "HTTP Only",
    "Edit_Raw": "Edit Raw",
    "Path": "Path",
    "Expiration": "Expiration",
    "Set-Cookie_String": "Set-Cookie String"
  },
  "FolderSettings_Auth": {
    "Inherit": "Inherit",
    "Auth": "Auth",
    "TBD": "TBD",
    "Save": "Save",
    "option_in_the": "option in the",
    "tab": "tab",
    "LongDescriptions1": "Configures authentication for the entire folder. This applies to all requests using the"
  },
  "FolderSettings_Documentation": {
    "Save": "Save"
  },
  "FolderSettings_Headers": {
    "Save": "Save",
    "Add_Header": "+ Add Header",
    "LongDescriptions1": "Request headers that will be sent with every request inside this folder."
  },
  "FolderSettings": {
    "Docs": "Docs",
    "Headers": "Headers",
    "Script": "Script",
    "Test": "Test",
    "Vars": "Vars",
    "Auth": "Auth"
  },
  "FolderSettings_Script": {
    "Save": "Save",
    "Post_Response": "Post Response",
    "Pre_Request": "Pre Request",
    "LongDescriptions1": "Pre and post-request scripts that will run before and after any request inside this folder is sent."
  },
  "FolderSettings_Tests": {
    "Save": "Save",
    "LongDescriptions1": "These tests will run any time a request in this collection is sent."
  },
  "FolderSettings_Vars": {
    "Save": "Save",
    "Pre_Request": "Pre Request",
    "Post_Response": "Post Response"
  },
  "FolderSettings_Vars_VarsTable": {
    "Name": "Name",
    "Value": "Value",
    "Expr": "Expr",
    "Add": "+ Add"
  },
  "Notifications": {
    "unread_notifications": "unread notifications",
    "No_Notifications": "No Notifications"
  },
  "Preferences_Display_Font": {
    "Code_Editor_Font": "Code Editor Font",
    "Font_Size": "Font Size",
    "Save": "Save"
  },
  "Preferences_Display": {
    "Theme": "Theme"
  },
  "Preferences_Display_Theme": {
    "Light": "Light",
    "Dark": "Dark",
    "System": "System"
  },
  "Preferences_General": {
    "Use_Custom_CA_Certificate": "Use Custom CA Certificate",
    "Store_Cookies_automatically": "Store Cookies automatically",
    "Send_Cookies_automatically": "Send Cookies automatically",
    "Save": "Save",
    "Request_Timeout": "Request Timeout",
    "Keep_Default_CA_Certificates": "Keep Default CA Certificates",
    "select_file": "select file",
    "SSL/TLS_Certificate_Verification": "SSL/TLS Certificate Verification"
  },
  "Preferences": {
    "General": "General",
    "Display": "Display",
    "Proxy": "Proxy",
    "Keybindings": "Keybindings",
    "Support": "Support"
  },
  "Preferences_ProxySettings": {
    "Mode": "Mode",
    "Protocol": "Protocol",
    "Hostname": "Hostname",
    "Port": "Port",
    "Auth": "Auth",
    "Username": "Username",
    "Password": "Password",
    "Proxy_Bypass": "Proxy Bypass",
    "Save": "Save"
  },
  "RequestTabPanel_FolderNotFound": {
    "Close_Tab": "Close Tab",
    "LongDescriptions2": "Folder no longer exists.",
    "LongDescriptions1": "This can happen when the folder was renamed or deleted on your filesystem."
  },
  "RequestTabPanel_RequestNotFound": {
    "Close_Tab": "Close Tab",
    "LongDescriptions2": "Request no longer exists.",
    "LongDescriptions1": "This can happen when the .bru file associated with this request was deleted on your filesystem."
  },
  "RequestTabs_RequestTab_ConfirmRequestClose": {
    "Cancel": "Cancel",
    "Save": "Save",
    "Dont_Save": "Don't Save",
    "LongDescriptions1": "You have unsaved changes in request"
  },
  "RequestTabs_RequestTab": {
    "New_Request": "New Request",
    "Clone_Request": "Clone Request",
    "Close": "Close",
    "Close_Others": "Close Others",
    "Close_to_the_Left": "Close to the Left",
    "Close_to_the_Right": "Close to the Right",
    "Close_Saved": "Close Saved",
    "Close_All": "Close All",
    "Not_Found": "Not Found",
    "Collection": "Collection",
    "Security": "Security",
    "Variables": "Variables",
    "Runner": "Runner"
  },
  "ResponsePane_ClearTimeline": {
    "Clear_Timeline": "Clear Timeline"
  },
  "ResponsePane": {
    "Something_went_wrong": "Something went wrong",
    "Timeline": "Timeline",
    "An_error_occurred": "An error occurred",
    "Response": "Response",
    "Headers": "Headers"
  },
  "ResponsePane_NetworkError": {
    "Close": "Close",
    "Network_Error": "Network Error"
  },
  "ResponsePane_Overlay": {
    "Cancel_Request": "Cancel Request"
  },
  "ResponsePane_TestResults": {
    "No_tests_found": "No tests found"
  },
  "ResponsePane_Timeline_TimelineItem_Common_Body": {
    "No_Body_found": "No Body found"
  },
  "RunnerResults": {
    "Delay": "Delay",
    "Runner": "Runner",
    "Run_Collection": "Run Collection",
    "Reset": "Reset",
    "Cancel_Execution": "Cancel Execution",
    "Run_Again": "Run Again",
    "You_have": "You have",
    "requests_in_this_collection": "requests in this collection",
    "LongDescriptions1": "Requests in this collection are still loading."
  },
  "RunnerResults_ResponsePane": {
    "Response": "Response",
    "Headers": "Headers",
    "Timeline": "Timeline"
  },
  "SecuritySettings": {
    "Safe_Mode": "Safe Mode",
    "JavaScript_Sandbox": "JavaScript Sandbox",
    "Save": "Save",
    "Developer_Mode": "Developer Mode",
    "LongDescriptions4": "JavaScript code has access to the filesystem, can execute system commands and access sensitive information.",
    "LongDescriptions3": "use only if you trust the authors of the collection",
    "LongDescriptions2": "JavaScript code is executed in a secure sandbox and cannot access your filesystem or execute system commands.",
    "LongDescriptions1": "The collection might include JavaScript code in Variables, Scripts, Tests, and Assertions."
  },
  "SecuritySettings_JsSandboxMode": {
    "Safe_Mode": "Safe Mode",
    "Developer_Mode": "Developer Mode"
  },
  "SecuritySettings_JsSandboxModeModal": {
    "Safe_Mode": "Safe Mode",
    "Developer_Mode": "Developer Mode",
    "LongDescriptions1": "JavaScript code has access to the filesystem, can execute system commands and access sensitive information.",
    "LongDescriptions2": "use only if you trust the authors of the collection",
    "LongDescriptions3": "JavaScript code is executed in a secure sandbox and cannot access your filesystem or execute system commands.",
    "LongDescriptions4": "Please choose the security level for the JavaScript code execution.",
    "LongDescriptions5": "The collection might include JavaScript code in Variables, Scripts, Tests, and Assertions."
  },
  "ShareCollection": {
    "Bruno_Collection": "Bruno Collection",
    "Postman_Collection": "Postman Collection",
    "Export_in_Bruno_format": "Export in Bruno format",
    "Export_in_Postman_format": "Export in Postman format"
  },
  "Welcome": {
    "bruno": "bruno"
  },
  "Hotkeys_keyMappings": {
    "Save": "Save",
    "Send Request": "Send Request",
    "Edit Environment": "Edit Environment",
    "New Request": "New Request",
    "Close Tab" : "Close Tab",
    "Open Preferences": "Open Preferences",
    "Minimize Window": "Minimize Window",
    "Switch to Previous Tab": "Switch to Previous Tab",
    "Switch to Next Tab": "Switch to Next Tab",
    "Close All Tabs": "Close All Tabs"
  },
  "RequestTabs_CollectionToolBar": {
    "Runner": "Runner",
    "Variables": "Variables",
    "Collection_Settings": "Collection Settings"
  },
  "EnvironmentDetails_EnvironmentVariables": {
    "Save": "Save",
    "Reset": "Reset",
    "Activate": "Activate",
    "Add_Variable": "+ Add Variable",
    "Enabled": "Enabled",
    "Name": "Name",
    "Value": "Value",
    "Secret": "Secret"
  },
  "Sidebar_Collections_Collection": {
    "New_Request": "New Request",
    "New_Folder": "New Folder",
    "Run": "Run",
    "Rename": "Rename",
    "Clone": "Clone",
    "Close": "Close",
    "Share": "Share",
    "Delete": "Delete",
    "Settings": "Settings",
    "Info": "Info"
  },
  "Sidebar_Collections_CollectionItem": {
    "New_Request": "New Request",
    "New_Folder": "New Folder",
    "Run": "Run",
    "Rename": "Rename",
    "Clone": "Clone",
    "Generate_Code": "Generate Code",
    "Show_in_Folder": "Show in Folder",
    "Delete": "Delete",
    "Settings": "Settings",
    "Info": "Info"
  }
}